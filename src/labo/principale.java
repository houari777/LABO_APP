package labo;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author HOUARI
 */
public class principale extends javax.swing.JFrame {

 
    /**
     * Creates new form principale
     */
    public principale() {
        initComponents();
        this.pack();
        this.setDefaultLookAndFeelDecorated(true);
        this.setExtendedState(this.MAXIMIZED_BOTH);
        ENREGISTRER_PERS.setEnabled(false);  
        
        // this.setExtendedState(JFrame.MAXIMIZED_BOTH) ;
//    Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        // setBounds(100, 100, (int) dim.getWidth(), (int) dim.getHeight());
        //setLocationRelativeTo(null);
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        LocalDate localDate = LocalDate.now();
        txt_date.setText(localDate.toString());
        HEMATOLOGIE.setVisible(false);
        BIOCHIMIE.setVisible(false);
        BACTERIOLOGIE.setVisible(false);
        AUTRES.setVisible(false);
        COOMBS.setVisible(false);
        CHIMIE_URINAIRE.setVisible(false);
        FORMULE_LEUCOCYTERE.setVisible(false);
        SERIOLOGIE.setVisible(false);
        PARASITOLOGIE.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_nom = new javax.swing.JTextField();
        txt_prenom = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_age = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_date = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Combo_sexe = new javax.swing.JComboBox<>();
        ENREGISTRER_PERS = new javax.swing.JButton();
        txt_telephone = new javax.swing.JTextField();
        jLabel68 = new javax.swing.JLabel();
        BIOCHIMIE = new javax.swing.JPanel();
        txt_uree = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txt_creatine = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        txt_glycemie = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txt_calcymie = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        txt_lipide = new javax.swing.JTextField();
        txt_cholesterol = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        txt_triglyceride = new javax.swing.JTextField();
        txt_protine = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        txt_acide = new javax.swing.JTextField();
        txt_amylase = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        txt_sgot = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        txt_sgpt = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        txt_directe = new javax.swing.JTextField();
        txt_libre = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        txt_totale = new javax.swing.JTextField();
        txt_phosph = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        txt_phosphor = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        txt_sodium = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        txt_potasium = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        ENREGISTRER_BIOCHIMIE = new javax.swing.JButton();
        HEMATOLOGIE = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txt_hematologie = new javax.swing.JTextField();
        txt_hemoglobine = new javax.swing.JTextField();
        txt_reticulocyte = new javax.swing.JTextField();
        txt_globule_rouge = new javax.swing.JTextField();
        txt_globule_blanc = new javax.swing.JTextField();
        txt_palquette = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        ENREGISTRER_HEMATO = new javax.swing.JButton();
        CHIMIE_URINAIRE = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        txt_sucre = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        txt_albumine = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        txt_acetone = new javax.swing.JTextField();
        jLabel54 = new javax.swing.JLabel();
        txt_sangchime = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        txt_bilirubine = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        txt_ph = new javax.swing.JTextField();
        ENREGISTRER_CHIMIEU = new javax.swing.JButton();
        AUTRES = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTXT_DESCRIPTION = new javax.swing.JTextArea();
        FORMULE_LEUCOCYTERE = new javax.swing.JPanel();
        txt_neutron = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txt_eosino = new javax.swing.JTextField();
        txt_baso = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txt_lympho = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txt_mono = new javax.swing.JTextField();
        txt_temp_saing = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txt_temp_coac = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txt_temp_quiq = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txt_temp_proth = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txt_fibrino = new javax.swing.JTextField();
        txt_rhesus = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txt_groupe_sang = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        ENREGISTRER_FORMULE = new javax.swing.JButton();
        PARASITOLOGIE = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        txt_selle = new javax.swing.JTextField();
        txt_sang = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        txt_teigne = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        ENREGISTRER_PARASI = new javax.swing.JButton();
        SERIOLOGIE = new javax.swing.JPanel();
        txt_also = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        txt_waler = new javax.swing.JTextField();
        txt_latex = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        txt_crp = new javax.swing.JTextField();
        txt_hbs = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        txt_kline = new javax.swing.JTextField();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        txt_widal = new javax.swing.JTextField();
        txt_kala = new javax.swing.JTextField();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        txt_testgr = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        ENREGISTRER_SERIOLOGIE = new javax.swing.JButton();
        BACTERIOLOGIE = new javax.swing.JPanel();
        txt_urine = new javax.swing.JTextField();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        txt_sellbact = new javax.swing.JTextField();
        ENREGISTRER_BACTERIO = new javax.swing.JButton();
        COOMBS = new javax.swing.JPanel();
        txt_1heure = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txt_2heure = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        ENREGISTRER_COOMBS = new javax.swing.JButton();
        jLabel69 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        Menu_ajouter_patient = new javax.swing.JMenuItem();
        Menu_liste_patient = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        Menu_hematologie = new javax.swing.JMenuItem();
        Menu_formule = new javax.swing.JMenuItem();
        Menu_coombs = new javax.swing.JMenuItem();
        Menu_biochimie = new javax.swing.JMenuItem();
        Menu_chimie_urinaire = new javax.swing.JMenuItem();
        Menu_parasitologie = new javax.swing.JMenuItem();
        Menu_bacteriologie = new javax.swing.JMenuItem();
        Menu_seriologie = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem_HEMATOLOGIE = new javax.swing.JMenuItem();
        jMenuItem_BIOCHIMIE = new javax.swing.JMenuItem();
        jMenuItem_CHIMIE_URINARE = new javax.swing.JMenuItem();
        jMenuItem_PACTERIOLOGIE = new javax.swing.JMenuItem();
        jMenuItem_PARASITOLOGIE = new javax.swing.JMenuItem();
        jMenuItem_COOMBS = new javax.swing.JMenuItem();
        jMenuItem_SERIOLOGIE = new javax.swing.JMenuItem();
        jMenuItem_FORMULE_LEUCOCYTERE = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CLINIQUE KICHOU");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 6));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("NOM:");

        txt_nom.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_nom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nomActionPerformed(evt);
            }
        });
        txt_nom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nomKeyPressed(evt);
            }
        });

        txt_prenom.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_prenom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_prenomActionPerformed(evt);
            }
        });
        txt_prenom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_prenomKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("PRENOM:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("SEXE:");

        txt_age.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_age.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_ageKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("AGE:");

        txt_date.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_date.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_dateMouseClicked(evt);
            }
        });
        txt_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_dateActionPerformed(evt);
            }
        });
        txt_date.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_dateKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("DATE:");

        Combo_sexe.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Combo_sexe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "male", "female" }));
        Combo_sexe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Combo_sexeActionPerformed(evt);
            }
        });
        Combo_sexe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Combo_sexeKeyPressed(evt);
            }
        });

        ENREGISTRER_PERS.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ENREGISTRER_PERS.setText("ENREGISTRER");
        ENREGISTRER_PERS.setEnabled(false);
        ENREGISTRER_PERS.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                ENREGISTRER_PERSMouseMoved(evt);
            }
        });
        ENREGISTRER_PERS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ENREGISTRER_PERSActionPerformed(evt);
            }
        });

        txt_telephone.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_telephone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_telephoneActionPerformed(evt);
            }
        });
        txt_telephone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_telephoneKeyPressed(evt);
            }
        });

        jLabel68.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel68.setText("N°  DE TELEPHONE");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_nom, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_prenom, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txt_age, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Combo_sexe, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_date, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(352, 352, 352)
                        .addComponent(jLabel68)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ENREGISTRER_PERS, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Combo_sexe)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txt_nom)
                        .addGap(1, 1, 1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txt_prenom)
                        .addGap(3, 3, 3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_age, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_date, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ENREGISTRER_PERS, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addContainerGap())
        );

        BIOCHIMIE.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 6), "BIOCHIMIE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        txt_uree.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_uree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ureeActionPerformed(evt);
            }
        });
        txt_uree.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_ureeKeyPressed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel27.setText("Urée (0,20-0,40 g/l)");

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel28.setText("Créatinine (8-12mg/l)");

        txt_creatine.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_creatine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_creatineActionPerformed(evt);
            }
        });
        txt_creatine.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_creatineKeyPressed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel29.setText("Glycémie (0,65-0,90g/l)");

        txt_glycemie.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_glycemie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_glycemieActionPerformed(evt);
            }
        });
        txt_glycemie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_glycemieKeyPressed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel30.setText("Calcémie (90-110mg/l)");

        txt_calcymie.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_calcymie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_calcymieActionPerformed(evt);
            }
        });
        txt_calcymie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_calcymieKeyPressed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel31.setText("Lipides totaux (5,5-7,5 g/l)");

        txt_lipide.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_lipide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_lipideActionPerformed(evt);
            }
        });
        txt_lipide.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_lipideKeyPressed(evt);
            }
        });

        txt_cholesterol.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_cholesterol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cholesterolActionPerformed(evt);
            }
        });
        txt_cholesterol.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_cholesterolKeyPressed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel32.setText("Cholestérol (1,4-2,7 g/l)");

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel33.setText("Triglycérides (0,60-1,65g/l)");

        txt_triglyceride.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_triglyceride.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_triglycerideActionPerformed(evt);
            }
        });
        txt_triglyceride.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_triglycerideKeyPressed(evt);
            }
        });

        txt_protine.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_protine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_protineActionPerformed(evt);
            }
        });
        txt_protine.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_protineKeyPressed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel34.setText("Protéine (63-79g/l)");

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel35.setText("Acides uriques (30-70/g/l)");

        txt_acide.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_acide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_acideActionPerformed(evt);
            }
        });
        txt_acide.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_acideKeyPressed(evt);
            }
        });

        txt_amylase.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_amylase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_amylaseActionPerformed(evt);
            }
        });
        txt_amylase.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_amylaseKeyPressed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel36.setText("Amylases");

        txt_sgot.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_sgot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_sgotActionPerformed(evt);
            }
        });
        txt_sgot.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_sgotKeyPressed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel37.setText("SGOT 45 UW");

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel38.setText("SGPT 35 UW");

        txt_sgpt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_sgpt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_sgptActionPerformed(evt);
            }
        });
        txt_sgpt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_sgptKeyPressed(evt);
            }
        });

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel39.setText("Directe 0");

        txt_directe.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_directe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_directeActionPerformed(evt);
            }
        });
        txt_directe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_directeKeyPressed(evt);
            }
        });

        txt_libre.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_libre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_libreActionPerformed(evt);
            }
        });
        txt_libre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_libreKeyPressed(evt);
            }
        });

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel40.setText("Libre (10mg/l)");

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel41.setText("Total (10 mg/l)");

        txt_totale.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_totale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_totaleActionPerformed(evt);
            }
        });
        txt_totale.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_totaleKeyPressed(evt);
            }
        });

        txt_phosph.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_phosph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_phosphActionPerformed(evt);
            }
        });
        txt_phosph.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_phosphKeyPressed(evt);
            }
        });

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel42.setText("Phosphatases Acalines (21-92Ul)");

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel43.setText("Phosphorémie (10-14 mg/l)");

        txt_phosphor.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_phosphor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_phosphorActionPerformed(evt);
            }
        });
        txt_phosphor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_phosphorKeyPressed(evt);
            }
        });

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel44.setText("Sodium (134-144 MEg/l)");

        txt_sodium.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_sodium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_sodiumActionPerformed(evt);
            }
        });
        txt_sodium.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_sodiumKeyPressed(evt);
            }
        });

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel45.setText("Potassium (3,8-5,4 g/l)");

        txt_potasium.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_potasium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_potasiumActionPerformed(evt);
            }
        });
        txt_potasium.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_potasiumKeyPressed(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel47.setText("TRANSAMINASES");

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel48.setText("BILIRUBINE");

        ENREGISTRER_BIOCHIMIE.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ENREGISTRER_BIOCHIMIE.setText("ENREGISTRER");
        ENREGISTRER_BIOCHIMIE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ENREGISTRER_BIOCHIMIEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BIOCHIMIELayout = new javax.swing.GroupLayout(BIOCHIMIE);
        BIOCHIMIE.setLayout(BIOCHIMIELayout);
        BIOCHIMIELayout.setHorizontalGroup(
            BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BIOCHIMIELayout.createSequentialGroup()
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BIOCHIMIELayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BIOCHIMIELayout.createSequentialGroup()
                                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel27)
                                    .addComponent(jLabel37)
                                    .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(73, 73, 73)
                                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_creatine, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_sgot, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_sgpt, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_directe)
                                    .addComponent(txt_glycemie, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_uree)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BIOCHIMIELayout.createSequentialGroup()
                                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(BIOCHIMIELayout.createSequentialGroup()
                                        .addComponent(jLabel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(22, 22, 22))
                                    .addGroup(BIOCHIMIELayout.createSequentialGroup()
                                        .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel36))
                                        .addGap(43, 43, 43)))
                                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BIOCHIMIELayout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addComponent(txt_sodium))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BIOCHIMIELayout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(txt_amylase))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BIOCHIMIELayout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(txt_protine))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BIOCHIMIELayout.createSequentialGroup()
                                .addComponent(jLabel33)
                                .addGap(48, 48, 48)
                                .addComponent(txt_triglyceride))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BIOCHIMIELayout.createSequentialGroup()
                                .addComponent(jLabel35)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                                .addComponent(txt_acide, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(BIOCHIMIELayout.createSequentialGroup()
                                .addComponent(jLabel45)
                                .addGap(74, 74, 74)
                                .addComponent(txt_potasium))
                            .addGroup(BIOCHIMIELayout.createSequentialGroup()
                                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel40, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel41, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel43)
                                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_calcymie)
                                    .addComponent(txt_phosphor)
                                    .addComponent(txt_cholesterol)
                                    .addComponent(txt_libre)
                                    .addComponent(txt_totale)
                                    .addComponent(txt_phosph)
                                    .addComponent(txt_lipide)))))
                    .addGroup(BIOCHIMIELayout.createSequentialGroup()
                        .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BIOCHIMIELayout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(BIOCHIMIELayout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(BIOCHIMIELayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(ENREGISTRER_BIOCHIMIE, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        BIOCHIMIELayout.setVerticalGroup(
            BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BIOCHIMIELayout.createSequentialGroup()
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(txt_uree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_creatine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_glycemie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addGap(0, 0, 0)
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_calcymie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_lipide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_cholesterol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_triglyceride, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33))
                .addGap(0, 0, 0)
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_protine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(txt_acide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_amylase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel47)
                .addGap(0, 0, 0)
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(txt_sgot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_sgpt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38))
                .addGap(0, 0, 0)
                .addComponent(jLabel48)
                .addGap(0, 0, 0)
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_directe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_libre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_totale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_phosph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_phosphor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel43))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_sodium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BIOCHIMIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_potasium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45))
                .addGap(0, 0, 0)
                .addComponent(ENREGISTRER_BIOCHIMIE)
                .addGap(0, 0, 0))
        );

        HEMATOLOGIE.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 6), "HEMATOLOGIE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Hématologie");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Hémoglobine");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Réticulocyte");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Globules rouges");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Globule blancs");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Plaquette");

        txt_hematologie.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_hematologie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_hematologieActionPerformed(evt);
            }
        });
        txt_hematologie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_hematologieKeyPressed(evt);
            }
        });

        txt_hemoglobine.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_hemoglobine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_hemoglobineActionPerformed(evt);
            }
        });
        txt_hemoglobine.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_hemoglobineKeyPressed(evt);
            }
        });

        txt_reticulocyte.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_reticulocyte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_reticulocyteActionPerformed(evt);
            }
        });
        txt_reticulocyte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_reticulocyteKeyPressed(evt);
            }
        });

        txt_globule_rouge.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_globule_rouge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_globule_rougeActionPerformed(evt);
            }
        });
        txt_globule_rouge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_globule_rougeKeyPressed(evt);
            }
        });

        txt_globule_blanc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_globule_blanc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_globule_blancActionPerformed(evt);
            }
        });
        txt_globule_blanc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_globule_blancKeyPressed(evt);
            }
        });

        txt_palquette.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_palquette.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_palquetteActionPerformed(evt);
            }
        });
        txt_palquette.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_palquetteKeyPressed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        ENREGISTRER_HEMATO.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ENREGISTRER_HEMATO.setText("ENREGISTRER");
        ENREGISTRER_HEMATO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ENREGISTRER_HEMATOActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HEMATOLOGIELayout = new javax.swing.GroupLayout(HEMATOLOGIE);
        HEMATOLOGIE.setLayout(HEMATOLOGIELayout);
        HEMATOLOGIELayout.setHorizontalGroup(
            HEMATOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HEMATOLOGIELayout.createSequentialGroup()
                .addGroup(HEMATOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HEMATOLOGIELayout.createSequentialGroup()
                        .addGroup(HEMATOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HEMATOLOGIELayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)))
                .addGroup(HEMATOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_hematologie)
                    .addComponent(txt_hemoglobine)
                    .addComponent(txt_reticulocyte)
                    .addComponent(txt_globule_rouge)
                    .addComponent(txt_globule_blanc)
                    .addComponent(txt_palquette))
                .addContainerGap())
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HEMATOLOGIELayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(ENREGISTRER_HEMATO, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
        );
        HEMATOLOGIELayout.setVerticalGroup(
            HEMATOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HEMATOLOGIELayout.createSequentialGroup()
                .addGroup(HEMATOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_hematologie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(HEMATOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_hemoglobine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(HEMATOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_reticulocyte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(HEMATOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_globule_rouge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(HEMATOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_globule_blanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(HEMATOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_palquette, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addComponent(ENREGISTRER_HEMATO, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        CHIMIE_URINAIRE.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 6), "CHIMIE URINAIRE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel51.setText("SUCRE");

        txt_sucre.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_sucre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_sucreActionPerformed(evt);
            }
        });
        txt_sucre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_sucreKeyPressed(evt);
            }
        });

        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel52.setText("ALBUMINE");

        txt_albumine.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_albumine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_albumineActionPerformed(evt);
            }
        });
        txt_albumine.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_albumineKeyPressed(evt);
            }
        });

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel53.setText("ACETONE");

        txt_acetone.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_acetone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_acetoneActionPerformed(evt);
            }
        });
        txt_acetone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_acetoneKeyPressed(evt);
            }
        });

        jLabel54.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel54.setText("SANG");

        txt_sangchime.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_sangchime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_sangchimeActionPerformed(evt);
            }
        });
        txt_sangchime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_sangchimeKeyPressed(evt);
            }
        });

        jLabel55.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel55.setText("BILIRUBINE");

        txt_bilirubine.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_bilirubine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_bilirubineActionPerformed(evt);
            }
        });
        txt_bilirubine.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_bilirubineKeyPressed(evt);
            }
        });

        jLabel56.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel56.setText("PH");

        txt_ph.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_ph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_phActionPerformed(evt);
            }
        });
        txt_ph.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_phKeyPressed(evt);
            }
        });

        ENREGISTRER_CHIMIEU.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ENREGISTRER_CHIMIEU.setText("ENREGISTRER");
        ENREGISTRER_CHIMIEU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ENREGISTRER_CHIMIEUActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CHIMIE_URINAIRELayout = new javax.swing.GroupLayout(CHIMIE_URINAIRE);
        CHIMIE_URINAIRE.setLayout(CHIMIE_URINAIRELayout);
        CHIMIE_URINAIRELayout.setHorizontalGroup(
            CHIMIE_URINAIRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CHIMIE_URINAIRELayout.createSequentialGroup()
                .addComponent(ENREGISTRER_CHIMIEU, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 24, Short.MAX_VALUE))
            .addGroup(CHIMIE_URINAIRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(CHIMIE_URINAIRELayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(CHIMIE_URINAIRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(CHIMIE_URINAIRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel51)
                            .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel55, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel56, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(CHIMIE_URINAIRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txt_sucre)
                        .addComponent(txt_albumine)
                        .addComponent(txt_acetone)
                        .addComponent(txt_sangchime)
                        .addComponent(txt_bilirubine)
                        .addComponent(txt_ph))
                    .addContainerGap()))
        );
        CHIMIE_URINAIRELayout.setVerticalGroup(
            CHIMIE_URINAIRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CHIMIE_URINAIRELayout.createSequentialGroup()
                .addContainerGap(237, Short.MAX_VALUE)
                .addComponent(ENREGISTRER_CHIMIEU)
                .addGap(0, 0, 0))
            .addGroup(CHIMIE_URINAIRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(CHIMIE_URINAIRELayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(CHIMIE_URINAIRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel51)
                        .addComponent(txt_sucre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(CHIMIE_URINAIRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_albumine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel52))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(CHIMIE_URINAIRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_acetone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel53))
                    .addGap(22, 22, 22)
                    .addGroup(CHIMIE_URINAIRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_sangchime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel54))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(CHIMIE_URINAIRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_bilirubine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel55))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(CHIMIE_URINAIRELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txt_ph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel56))
                    .addContainerGap(64, Short.MAX_VALUE)))
        );

        AUTRES.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 6), "AUTRES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jTXT_DESCRIPTION.setColumns(20);
        jTXT_DESCRIPTION.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTXT_DESCRIPTION.setRows(5);
        jScrollPane1.setViewportView(jTXT_DESCRIPTION);

        javax.swing.GroupLayout AUTRESLayout = new javax.swing.GroupLayout(AUTRES);
        AUTRES.setLayout(AUTRESLayout);
        AUTRESLayout.setHorizontalGroup(
            AUTRESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
        );
        AUTRESLayout.setVerticalGroup(
            AUTRESLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
        );

        FORMULE_LEUCOCYTERE.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 6), "FORMULE LEUCOCYTERE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        txt_neutron.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_neutron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_neutronActionPerformed(evt);
            }
        });
        txt_neutron.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_neutronKeyPressed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Neutron");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("EOSINO");

        txt_eosino.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_eosino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_eosinoActionPerformed(evt);
            }
        });
        txt_eosino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_eosinoKeyPressed(evt);
            }
        });

        txt_baso.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_baso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_basoActionPerformed(evt);
            }
        });
        txt_baso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_basoKeyPressed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("Baso");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("Lympho");

        txt_lympho.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_lympho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_lymphoActionPerformed(evt);
            }
        });
        txt_lympho.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_lymphoKeyPressed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("Mono");

        txt_mono.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_mono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_monoActionPerformed(evt);
            }
        });
        txt_mono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_monoKeyPressed(evt);
            }
        });

        txt_temp_saing.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_temp_saing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_temp_saingActionPerformed(evt);
            }
        });
        txt_temp_saing.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_temp_saingKeyPressed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("Temps de saignement");

        txt_temp_coac.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_temp_coac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_temp_coacActionPerformed(evt);
            }
        });
        txt_temp_coac.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_temp_coacKeyPressed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("Temps de coaulation");

        txt_temp_quiq.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_temp_quiq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_temp_quiqActionPerformed(evt);
            }
        });
        txt_temp_quiq.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_temp_quiqKeyPressed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setText("Temps de QUICK");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setText("Temps de prothrombine");

        txt_temp_proth.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_temp_proth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_temp_prothActionPerformed(evt);
            }
        });
        txt_temp_proth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_temp_prothKeyPressed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setText("Groupe sanguin");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setText("Rhésus");

        txt_fibrino.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_fibrino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_fibrinoActionPerformed(evt);
            }
        });
        txt_fibrino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_fibrinoKeyPressed(evt);
            }
        });

        txt_rhesus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_rhesus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_rhesusActionPerformed(evt);
            }
        });
        txt_rhesus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_rhesusKeyPressed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel23.setText("Fibrinogène");

        txt_groupe_sang.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_groupe_sang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_groupe_sangActionPerformed(evt);
            }
        });
        txt_groupe_sang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_groupe_sangKeyPressed(evt);
            }
        });

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));

        ENREGISTRER_FORMULE.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ENREGISTRER_FORMULE.setText("ENREGISTRER");
        ENREGISTRER_FORMULE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ENREGISTRER_FORMULEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FORMULE_LEUCOCYTERELayout = new javax.swing.GroupLayout(FORMULE_LEUCOCYTERE);
        FORMULE_LEUCOCYTERE.setLayout(FORMULE_LEUCOCYTERELayout);
        FORMULE_LEUCOCYTERELayout.setHorizontalGroup(
            FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FORMULE_LEUCOCYTERELayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FORMULE_LEUCOCYTERELayout.createSequentialGroup()
                        .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel15)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_neutron)
                            .addComponent(txt_eosino)
                            .addComponent(txt_baso)
                            .addComponent(txt_lympho)
                            .addComponent(txt_mono)))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FORMULE_LEUCOCYTERELayout.createSequentialGroup()
                        .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel18)
                            .addComponent(jLabel23))
                        .addGap(18, 18, 18)
                        .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_temp_quiq, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                            .addComponent(txt_temp_proth)
                            .addComponent(txt_fibrino)
                            .addComponent(txt_temp_coac, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_temp_saing, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FORMULE_LEUCOCYTERELayout.createSequentialGroup()
                        .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_rhesus)
                            .addComponent(txt_groupe_sang))))
                .addContainerGap())
            .addGroup(FORMULE_LEUCOCYTERELayout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(ENREGISTRER_FORMULE, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FORMULE_LEUCOCYTERELayout.setVerticalGroup(
            FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FORMULE_LEUCOCYTERELayout.createSequentialGroup()
                .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txt_neutron, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_eosino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_baso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(5, 5, 5)
                .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_lympho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_mono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_temp_saing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_temp_coac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_temp_quiq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_temp_proth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_fibrino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addGap(0, 0, 0)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_groupe_sang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FORMULE_LEUCOCYTERELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_rhesus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ENREGISTRER_FORMULE))
        );

        PARASITOLOGIE.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 6), "PARASITOLOGIE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel46.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel46.setText("Selles");

        txt_selle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_selle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_selleActionPerformed(evt);
            }
        });
        txt_selle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_selleKeyPressed(evt);
            }
        });

        txt_sang.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_sang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_sangActionPerformed(evt);
            }
        });
        txt_sang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_sangKeyPressed(evt);
            }
        });

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel49.setText("Sang");

        txt_teigne.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_teigne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_teigneActionPerformed(evt);
            }
        });

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel50.setText("Teigne");

        ENREGISTRER_PARASI.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ENREGISTRER_PARASI.setText("ENREGISTRER");
        ENREGISTRER_PARASI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ENREGISTRER_PARASIActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PARASITOLOGIELayout = new javax.swing.GroupLayout(PARASITOLOGIE);
        PARASITOLOGIE.setLayout(PARASITOLOGIELayout);
        PARASITOLOGIELayout.setHorizontalGroup(
            PARASITOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PARASITOLOGIELayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PARASITOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel46)
                    .addComponent(jLabel50)
                    .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(PARASITOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_teigne)
                    .addComponent(txt_sang)
                    .addComponent(txt_selle))
                .addContainerGap())
            .addGroup(PARASITOLOGIELayout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(ENREGISTRER_PARASI, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PARASITOLOGIELayout.setVerticalGroup(
            PARASITOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PARASITOLOGIELayout.createSequentialGroup()
                .addGroup(PARASITOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_selle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PARASITOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_sang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49))
                .addGap(14, 14, 14)
                .addGroup(PARASITOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel50)
                    .addComponent(txt_teigne, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(ENREGISTRER_PARASI))
        );

        SERIOLOGIE.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 6), "SERIOLOGIE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        txt_also.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_also.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_alsoActionPerformed(evt);
            }
        });
        txt_also.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_alsoKeyPressed(evt);
            }
        });

        jLabel57.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel57.setText("ALSO");

        jLabel58.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel58.setText("Waler rose");

        txt_waler.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_waler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_walerActionPerformed(evt);
            }
        });
        txt_waler.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_walerKeyPressed(evt);
            }
        });

        txt_latex.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_latex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_latexActionPerformed(evt);
            }
        });
        txt_latex.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_latexKeyPressed(evt);
            }
        });

        jLabel59.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel59.setText("Latex");

        jLabel60.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel60.setText("CRP");

        txt_crp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_crp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_crpActionPerformed(evt);
            }
        });
        txt_crp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_crpKeyPressed(evt);
            }
        });

        txt_hbs.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_hbs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_hbsActionPerformed(evt);
            }
        });
        txt_hbs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_hbsKeyPressed(evt);
            }
        });

        jLabel61.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel61.setText("HBS");

        txt_kline.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_kline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_klineActionPerformed(evt);
            }
        });
        txt_kline.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_klineKeyPressed(evt);
            }
        });

        jLabel62.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel62.setText("KLINE VRDL");

        jLabel63.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel63.setText("WIDAL");

        txt_widal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_widal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_widalActionPerformed(evt);
            }
        });
        txt_widal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_widalKeyPressed(evt);
            }
        });

        txt_kala.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_kala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_kalaActionPerformed(evt);
            }
        });
        txt_kala.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_kalaKeyPressed(evt);
            }
        });

        jLabel64.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel64.setText("KALA-AZAR");

        jLabel65.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel65.setText("Test de grossesse");

        txt_testgr.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_testgr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_testgrActionPerformed(evt);
            }
        });
        txt_testgr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_testgrKeyPressed(evt);
            }
        });

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        ENREGISTRER_SERIOLOGIE.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ENREGISTRER_SERIOLOGIE.setText("ENREGISTRER");
        ENREGISTRER_SERIOLOGIE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ENREGISTRER_SERIOLOGIEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SERIOLOGIELayout = new javax.swing.GroupLayout(SERIOLOGIE);
        SERIOLOGIE.setLayout(SERIOLOGIELayout);
        SERIOLOGIELayout.setHorizontalGroup(
            SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SERIOLOGIELayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel57, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel59, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel60))
                    .addComponent(jLabel58)
                    .addComponent(jLabel61))
                .addGap(18, 18, 18)
                .addGroup(SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txt_waler, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                    .addComponent(txt_latex, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_crp, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_hbs, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_also))
                .addGroup(SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SERIOLOGIELayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel62, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel64)
                                .addComponent(jLabel65))
                            .addComponent(jLabel63))
                        .addGap(18, 18, 18)
                        .addGroup(SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txt_widal)
                            .addComponent(txt_kala, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_testgr, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_kline, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(SERIOLOGIELayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(ENREGISTRER_SERIOLOGIE, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(SERIOLOGIELayout.createSequentialGroup()
                    .addGap(184, 184, 184)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(347, Short.MAX_VALUE)))
        );
        SERIOLOGIELayout.setVerticalGroup(
            SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SERIOLOGIELayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(SERIOLOGIELayout.createSequentialGroup()
                        .addGroup(SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_also, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel57))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_waler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel58))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_latex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel59))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_crp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel60)))
                    .addGroup(SERIOLOGIELayout.createSequentialGroup()
                        .addGroup(SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_kline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel62))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_widal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel63))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_kala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel64))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_testgr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel65))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_hbs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel61)
                    .addComponent(ENREGISTRER_SERIOLOGIE))
                .addGap(0, 0, 0))
            .addGroup(SERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SERIOLOGIELayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        BACTERIOLOGIE.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 6), "BACTERIOLOGIE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        txt_urine.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_urine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_urineActionPerformed(evt);
            }
        });
        txt_urine.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_urineKeyPressed(evt);
            }
        });

        jLabel66.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel66.setText("URINES");

        jLabel67.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel67.setText("SELLES");

        txt_sellbact.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_sellbact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_sellbactActionPerformed(evt);
            }
        });
        txt_sellbact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_sellbactKeyPressed(evt);
            }
        });

        ENREGISTRER_BACTERIO.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ENREGISTRER_BACTERIO.setText("ENREGISTRER");
        ENREGISTRER_BACTERIO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ENREGISTRER_BACTERIOActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BACTERIOLOGIELayout = new javax.swing.GroupLayout(BACTERIOLOGIE);
        BACTERIOLOGIE.setLayout(BACTERIOLOGIELayout);
        BACTERIOLOGIELayout.setHorizontalGroup(
            BACTERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BACTERIOLOGIELayout.createSequentialGroup()
                .addGroup(BACTERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel66)
                    .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(BACTERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_sellbact)
                    .addComponent(txt_urine)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BACTERIOLOGIELayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ENREGISTRER_BACTERIO, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125))
        );
        BACTERIOLOGIELayout.setVerticalGroup(
            BACTERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BACTERIOLOGIELayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(BACTERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_urine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel66))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BACTERIOLOGIELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_sellbact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel67))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ENREGISTRER_BACTERIO))
        );

        COOMBS.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 6), "COOMBS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        txt_1heure.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_1heure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_1heureActionPerformed(evt);
            }
        });
        txt_1heure.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_1heureKeyPressed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel24.setText("1èr heure");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel25.setText("2eme heure");

        txt_2heure.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_2heure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_2heureActionPerformed(evt);
            }
        });
        txt_2heure.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_2heureKeyPressed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Vitesse de sédimentation");

        ENREGISTRER_COOMBS.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ENREGISTRER_COOMBS.setText("ENREGISTRER");
        ENREGISTRER_COOMBS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ENREGISTRER_COOMBSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout COOMBSLayout = new javax.swing.GroupLayout(COOMBS);
        COOMBS.setLayout(COOMBSLayout);
        COOMBSLayout.setHorizontalGroup(
            COOMBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(COOMBSLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, COOMBSLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(txt_2heure)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, COOMBSLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(ENREGISTRER_COOMBS, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
            .addGroup(COOMBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(COOMBSLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel24)
                    .addGap(56, 56, 56)
                    .addComponent(txt_1heure, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        COOMBSLayout.setVerticalGroup(
            COOMBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(COOMBSLayout.createSequentialGroup()
                .addComponent(jLabel26)
                .addGap(39, 39, 39)
                .addGroup(COOMBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_2heure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(0, 0, 0)
                .addComponent(ENREGISTRER_COOMBS))
            .addGroup(COOMBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(COOMBSLayout.createSequentialGroup()
                    .addGap(24, 24, 24)
                    .addGroup(COOMBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_1heure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel24))
                    .addContainerGap(62, Short.MAX_VALUE)))
        );

        jLabel69.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labo/patient-image.jpg"))); // NOI18N

        jMenu2.setText("Patient");

        Menu_ajouter_patient.setText("Ajouter un patient");
        Menu_ajouter_patient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_ajouter_patientActionPerformed(evt);
            }
        });
        jMenu2.add(Menu_ajouter_patient);

        Menu_liste_patient.setText("Liste des patient");
        Menu_liste_patient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_liste_patientActionPerformed(evt);
            }
        });
        jMenu2.add(Menu_liste_patient);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Analyses");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });

        Menu_hematologie.setText("HEMATOLOGIE");
        Menu_hematologie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu_hematologieMouseClicked(evt);
            }
        });
        Menu_hematologie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_hematologieActionPerformed(evt);
            }
        });
        jMenu3.add(Menu_hematologie);

        Menu_formule.setText("FORMULE LEUCOCYTERE");
        Menu_formule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu_formuleMouseClicked(evt);
            }
        });
        Menu_formule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_formuleActionPerformed(evt);
            }
        });
        jMenu3.add(Menu_formule);

        Menu_coombs.setText("COOMBS");
        Menu_coombs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu_coombsMouseClicked(evt);
            }
        });
        Menu_coombs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_coombsActionPerformed(evt);
            }
        });
        jMenu3.add(Menu_coombs);

        Menu_biochimie.setText("BIOCHIMIE");
        Menu_biochimie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu_biochimieMouseClicked(evt);
            }
        });
        Menu_biochimie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_biochimieActionPerformed(evt);
            }
        });
        jMenu3.add(Menu_biochimie);

        Menu_chimie_urinaire.setText("CHIMIE URINAIRE");
        Menu_chimie_urinaire.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu_chimie_urinaireMouseClicked(evt);
            }
        });
        Menu_chimie_urinaire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_chimie_urinaireActionPerformed(evt);
            }
        });
        jMenu3.add(Menu_chimie_urinaire);

        Menu_parasitologie.setText("PARASITOLOGIE");
        Menu_parasitologie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu_parasitologieMouseClicked(evt);
            }
        });
        Menu_parasitologie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_parasitologieActionPerformed(evt);
            }
        });
        jMenu3.add(Menu_parasitologie);

        Menu_bacteriologie.setText("BACTERIOLOGIE");
        Menu_bacteriologie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu_bacteriologieMouseClicked(evt);
            }
        });
        Menu_bacteriologie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_bacteriologieActionPerformed(evt);
            }
        });
        jMenu3.add(Menu_bacteriologie);

        Menu_seriologie.setText("SERIOLOGIE");
        Menu_seriologie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu_seriologieMouseClicked(evt);
            }
        });
        Menu_seriologie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_seriologieActionPerformed(evt);
            }
        });
        jMenu3.add(Menu_seriologie);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Impression");

        jMenuItem_HEMATOLOGIE.setText("HEMATOLOGIE");
        jMenuItem_HEMATOLOGIE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_HEMATOLOGIEActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem_HEMATOLOGIE);

        jMenuItem_BIOCHIMIE.setText("BIOCHIMIE");
        jMenuItem_BIOCHIMIE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_BIOCHIMIEActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem_BIOCHIMIE);

        jMenuItem_CHIMIE_URINARE.setText("CHIMIE URINARE");
        jMenuItem_CHIMIE_URINARE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_CHIMIE_URINAREActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem_CHIMIE_URINARE);

        jMenuItem_PACTERIOLOGIE.setText("BACTERIOLOGIE");
        jMenuItem_PACTERIOLOGIE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_PACTERIOLOGIEActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem_PACTERIOLOGIE);

        jMenuItem_PARASITOLOGIE.setText("PARASITOLOGIE");
        jMenuItem_PARASITOLOGIE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_PARASITOLOGIEActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem_PARASITOLOGIE);

        jMenuItem_COOMBS.setText("COOMBS");
        jMenuItem_COOMBS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_COOMBSActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem_COOMBS);

        jMenuItem_SERIOLOGIE.setText("SERIOLOGIE");
        jMenuItem_SERIOLOGIE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_SERIOLOGIEActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem_SERIOLOGIE);

        jMenuItem_FORMULE_LEUCOCYTERE.setText("FORMULE LEUCOCYTERE");
        jMenuItem_FORMULE_LEUCOCYTERE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_FORMULE_LEUCOCYTEREActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem_FORMULE_LEUCOCYTERE);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HEMATOLOGIE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(FORMULE_LEUCOCYTERE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BIOCHIMIE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(COOMBS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BACTERIOLOGIE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CHIMIE_URINAIRE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AUTRES, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(SERIOLOGIE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PARASITOLOGIE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel69, javax.swing.GroupLayout.DEFAULT_SIZE, 1499, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CHIMIE_URINAIRE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AUTRES, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(SERIOLOGIE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(BACTERIOLOGIE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PARASITOLOGIE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(HEMATOLOGIE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FORMULE_LEUCOCYTERE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BIOCHIMIE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(COOMBS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 114, Short.MAX_VALUE)
                    .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 832, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_dateActionPerformed

    private void Combo_sexeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Combo_sexeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Combo_sexeActionPerformed

    private void txt_prenomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_prenomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_prenomActionPerformed

    private void txt_hematologieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_hematologieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_hematologieActionPerformed

    private void txt_hemoglobineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_hemoglobineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_hemoglobineActionPerformed

    private void txt_reticulocyteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_reticulocyteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_reticulocyteActionPerformed

    private void txt_globule_rougeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_globule_rougeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_globule_rougeActionPerformed

    private void txt_globule_blancActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_globule_blancActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_globule_blancActionPerformed

    private void txt_palquetteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_palquetteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_palquetteActionPerformed

    private void txt_neutronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_neutronActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_neutronActionPerformed

    private void txt_eosinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_eosinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_eosinoActionPerformed

    private void txt_basoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_basoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_basoActionPerformed

    private void txt_lymphoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_lymphoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_lymphoActionPerformed

    private void txt_monoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_monoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_monoActionPerformed

    private void txt_temp_saingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_temp_saingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_temp_saingActionPerformed

    private void txt_temp_coacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_temp_coacActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_temp_coacActionPerformed

    private void txt_temp_quiqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_temp_quiqActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_temp_quiqActionPerformed

    private void txt_temp_prothActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_temp_prothActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_temp_prothActionPerformed

    private void txt_fibrinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_fibrinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fibrinoActionPerformed

    private void txt_rhesusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_rhesusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_rhesusActionPerformed

    private void txt_groupe_sangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_groupe_sangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_groupe_sangActionPerformed

    private void txt_1heureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_1heureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_1heureActionPerformed

    private void txt_2heureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_2heureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_2heureActionPerformed

    private void txt_ureeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_ureeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ureeActionPerformed

    private void txt_creatineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_creatineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_creatineActionPerformed

    private void txt_glycemieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_glycemieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_glycemieActionPerformed

    private void txt_calcymieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_calcymieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_calcymieActionPerformed

    private void txt_lipideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_lipideActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_lipideActionPerformed

    private void txt_cholesterolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cholesterolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cholesterolActionPerformed

    private void txt_triglycerideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_triglycerideActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_triglycerideActionPerformed

    private void txt_protineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_protineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_protineActionPerformed

    private void txt_acideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_acideActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_acideActionPerformed

    private void txt_amylaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_amylaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_amylaseActionPerformed

    private void txt_sgotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_sgotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_sgotActionPerformed

    private void txt_sgptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_sgptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_sgptActionPerformed

    private void txt_directeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_directeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_directeActionPerformed

    private void txt_libreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_libreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_libreActionPerformed

    private void txt_totaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_totaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_totaleActionPerformed

    private void txt_phosphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_phosphActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_phosphActionPerformed

    private void txt_phosphorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_phosphorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_phosphorActionPerformed

    private void txt_sodiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_sodiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_sodiumActionPerformed

    private void txt_potasiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_potasiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_potasiumActionPerformed

    private void txt_selleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_selleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_selleActionPerformed

    private void txt_sangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_sangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_sangActionPerformed

    private void txt_teigneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_teigneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_teigneActionPerformed

    private void txt_sucreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_sucreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_sucreActionPerformed

    private void txt_albumineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_albumineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_albumineActionPerformed

    private void txt_acetoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_acetoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_acetoneActionPerformed

    private void txt_sangchimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_sangchimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_sangchimeActionPerformed

    private void txt_bilirubineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_bilirubineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_bilirubineActionPerformed

    private void txt_phActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_phActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_phActionPerformed

    private void txt_alsoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_alsoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_alsoActionPerformed

    private void txt_walerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_walerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_walerActionPerformed

    private void txt_latexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_latexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_latexActionPerformed

    private void txt_crpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_crpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_crpActionPerformed

    private void txt_hbsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_hbsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_hbsActionPerformed

    private void txt_klineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_klineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_klineActionPerformed

    private void txt_widalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_widalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_widalActionPerformed

    private void txt_kalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_kalaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_kalaActionPerformed

    private void txt_testgrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_testgrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_testgrActionPerformed

    private void txt_urineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_urineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_urineActionPerformed

    private void txt_sellbactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_sellbactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_sellbactActionPerformed

    private void ENREGISTRER_PERSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ENREGISTRER_PERSActionPerformed
txt_nom.setText( txt_nom.getText( ).toUpperCase( ) ); 
txt_prenom.setText( txt_prenom.getText( ).toUpperCase( ) ); 

 
        Connection conn = null;
        String sql = "INSERT   INTO  PERSONNE (NOM,PRENOM, AGE,SEXE, DATE, N_TEL) VALUES(?,?,?,?,?,?)" ;

        try {
           
 String url = "jdbc:sqlite:LABO.db";
            // create a connection to the database
            conn= DriverManager.getConnection(url);
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, txt_nom.getText());
            pstmt.setString(2, txt_prenom.getText());
            pstmt.setString(3, txt_age.getText());
            pstmt.setString(4, Combo_sexe.getSelectedItem().toString());
            pstmt.setString(5, txt_date.getText());
            pstmt.setString(6, txt_telephone.getText());
  JOptionPane.showMessageDialog(null, "ENREGISTRER");
            pstmt.executeUpdate();
        } catch (SQLException e) {
            
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
         ENREGISTRER_PERS.setEnabled(false);
    }//GEN-LAST:event_ENREGISTRER_PERSActionPerformed

    private void txt_prenomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_prenomKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_age.requestFocus();
    }//GEN-LAST:event_txt_prenomKeyPressed
    }
    private void Combo_sexeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Combo_sexeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_date.requestFocus();
        }
    }//GEN-LAST:event_Combo_sexeKeyPressed

    private void txt_dateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_dateKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_hematologie.requestFocus();
        }
    }//GEN-LAST:event_txt_dateKeyPressed

    private void txt_hematologieKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_hematologieKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_hemoglobine.requestFocus();
        }
    }//GEN-LAST:event_txt_hematologieKeyPressed

    private void txt_hemoglobineKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_hemoglobineKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_reticulocyte.requestFocus();
        }
    }//GEN-LAST:event_txt_hemoglobineKeyPressed

    private void txt_reticulocyteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_reticulocyteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_globule_rouge.requestFocus();
        }
    }//GEN-LAST:event_txt_reticulocyteKeyPressed

    private void txt_globule_rougeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_globule_rougeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_globule_blanc.requestFocus();
        }
    }//GEN-LAST:event_txt_globule_rougeKeyPressed

    private void txt_globule_blancKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_globule_blancKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_palquette.requestFocus();
        }
    }//GEN-LAST:event_txt_globule_blancKeyPressed

    private void txt_palquetteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_palquetteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_neutron.requestFocus();
        }

    }//GEN-LAST:event_txt_palquetteKeyPressed

    private void txt_neutronKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_neutronKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_eosino.requestFocus();
        }
    }//GEN-LAST:event_txt_neutronKeyPressed

    private void txt_eosinoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_eosinoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_baso.requestFocus();
        }
    }//GEN-LAST:event_txt_eosinoKeyPressed

    private void txt_basoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_basoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_lympho.requestFocus();
        }
    }//GEN-LAST:event_txt_basoKeyPressed

    private void txt_lymphoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_lymphoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_mono.requestFocus();
        }
    }//GEN-LAST:event_txt_lymphoKeyPressed

    private void txt_monoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_monoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_temp_saing.requestFocus();
        }
    }//GEN-LAST:event_txt_monoKeyPressed

    private void txt_temp_saingKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_temp_saingKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_temp_coac.requestFocus();
        }
    }//GEN-LAST:event_txt_temp_saingKeyPressed

    private void txt_temp_coacKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_temp_coacKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_temp_quiq.requestFocus();
        }
    }//GEN-LAST:event_txt_temp_coacKeyPressed

    private void txt_temp_quiqKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_temp_quiqKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_temp_proth.requestFocus();
        }
    }//GEN-LAST:event_txt_temp_quiqKeyPressed

    private void txt_temp_prothKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_temp_prothKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_fibrino.requestFocus();
        }
    }//GEN-LAST:event_txt_temp_prothKeyPressed

    private void txt_fibrinoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_fibrinoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_groupe_sang.requestFocus();
        }
    }//GEN-LAST:event_txt_fibrinoKeyPressed

    private void txt_groupe_sangKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_groupe_sangKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_rhesus.requestFocus();
        }
    }//GEN-LAST:event_txt_groupe_sangKeyPressed

    private void txt_rhesusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_rhesusKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_1heure.requestFocus();
        }
    }//GEN-LAST:event_txt_rhesusKeyPressed

    private void txt_1heureKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_1heureKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_2heure.requestFocus();
        }
    }//GEN-LAST:event_txt_1heureKeyPressed

    private void txt_2heureKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_2heureKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_uree.requestFocus();
        }
    }//GEN-LAST:event_txt_2heureKeyPressed

    private void txt_ureeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ureeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_creatine.requestFocus();
        }
    }//GEN-LAST:event_txt_ureeKeyPressed

    private void txt_creatineKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_creatineKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_glycemie.requestFocus();
        }
    }//GEN-LAST:event_txt_creatineKeyPressed

    private void txt_glycemieKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_glycemieKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_calcymie.requestFocus();
        }
    }//GEN-LAST:event_txt_glycemieKeyPressed

    private void txt_calcymieKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_calcymieKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_lipide.requestFocus();
        }
    }//GEN-LAST:event_txt_calcymieKeyPressed

    private void txt_lipideKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_lipideKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_cholesterol.requestFocus();
        }
    }//GEN-LAST:event_txt_lipideKeyPressed

    private void txt_cholesterolKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cholesterolKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_triglyceride.requestFocus();
        }
    }//GEN-LAST:event_txt_cholesterolKeyPressed

    private void txt_triglycerideKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_triglycerideKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_protine.requestFocus();
        }
    }//GEN-LAST:event_txt_triglycerideKeyPressed

    private void txt_protineKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_protineKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_acide.requestFocus();
        }
    }//GEN-LAST:event_txt_protineKeyPressed

    private void txt_acideKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_acideKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_amylase.requestFocus();
        }
    }//GEN-LAST:event_txt_acideKeyPressed

    private void txt_amylaseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_amylaseKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_sgot.requestFocus();
        }
    }//GEN-LAST:event_txt_amylaseKeyPressed

    private void txt_sgotKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_sgotKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_sgpt.requestFocus();
        }
    }//GEN-LAST:event_txt_sgotKeyPressed

    private void txt_sgptKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_sgptKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_directe.requestFocus();
        }
    }//GEN-LAST:event_txt_sgptKeyPressed

    private void txt_directeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_directeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_libre.requestFocus();
        }
    }//GEN-LAST:event_txt_directeKeyPressed

    private void txt_libreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_libreKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_totale.requestFocus();
        }
    }//GEN-LAST:event_txt_libreKeyPressed

    private void txt_totaleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_totaleKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_phosph.requestFocus();
        }
    }//GEN-LAST:event_txt_totaleKeyPressed

    private void txt_phosphKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_phosphKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_phosphor.requestFocus();
        }
    }//GEN-LAST:event_txt_phosphKeyPressed

    private void txt_phosphorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_phosphorKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_sodium.requestFocus();
        }
    }//GEN-LAST:event_txt_phosphorKeyPressed

    private void txt_sodiumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_sodiumKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_potasium.requestFocus();
        }
    }//GEN-LAST:event_txt_sodiumKeyPressed

    private void txt_potasiumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_potasiumKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_sucre.requestFocus();
        }
    }//GEN-LAST:event_txt_potasiumKeyPressed

    private void txt_sucreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_sucreKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_albumine.requestFocus();
        }
    }//GEN-LAST:event_txt_sucreKeyPressed

    private void txt_albumineKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_albumineKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_acetone.requestFocus();
        }
    }//GEN-LAST:event_txt_albumineKeyPressed

    private void txt_acetoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_acetoneKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_sangchime.requestFocus();
        }
    }//GEN-LAST:event_txt_acetoneKeyPressed

    private void txt_sangchimeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_sangchimeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_bilirubine.requestFocus();
        }
    }//GEN-LAST:event_txt_sangchimeKeyPressed

    private void txt_bilirubineKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_bilirubineKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_ph.requestFocus();
        }
    }//GEN-LAST:event_txt_bilirubineKeyPressed

    private void txt_phKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_phKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_also.requestFocus();
        }
    }//GEN-LAST:event_txt_phKeyPressed

    private void txt_alsoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_alsoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_waler.requestFocus();
        }
    }//GEN-LAST:event_txt_alsoKeyPressed

    private void txt_walerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_walerKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_latex.requestFocus();
        }
    }//GEN-LAST:event_txt_walerKeyPressed

    private void txt_latexKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_latexKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_crp.requestFocus();
        }
    }//GEN-LAST:event_txt_latexKeyPressed

    private void txt_crpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_crpKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_hbs.requestFocus();
        }
    }//GEN-LAST:event_txt_crpKeyPressed

    private void txt_hbsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_hbsKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_kline.requestFocus();
        }
    }//GEN-LAST:event_txt_hbsKeyPressed

    private void txt_klineKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_klineKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_widal.requestFocus();
        }
    }//GEN-LAST:event_txt_klineKeyPressed

    private void txt_widalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_widalKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_kala.requestFocus();
        }
    }//GEN-LAST:event_txt_widalKeyPressed

    private void txt_kalaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_kalaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_testgr.requestFocus();
        }
    }//GEN-LAST:event_txt_kalaKeyPressed

    private void txt_testgrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_testgrKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_urine.requestFocus();
        }
    }//GEN-LAST:event_txt_testgrKeyPressed

    private void txt_urineKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_urineKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_sellbact.requestFocus();
        }
    }//GEN-LAST:event_txt_urineKeyPressed

    private void txt_sellbactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_sellbactKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_selle.requestFocus();
        }
    }//GEN-LAST:event_txt_sellbactKeyPressed

    private void txt_selleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_selleKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_sang.requestFocus();
        }
    }//GEN-LAST:event_txt_selleKeyPressed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed

    }//GEN-LAST:event_jMenu3ActionPerformed

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked

    }//GEN-LAST:event_jMenu3MouseClicked

    private void txt_telephoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_telephoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_telephoneActionPerformed

    private void txt_telephoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_telephoneKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_telephoneKeyPressed

    private void ENREGISTRER_HEMATOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ENREGISTRER_HEMATOActionPerformed
        Connection conn = null;
        String sql = "INSERT INTO HEMATOLOGIE(  HEMATOCRITE, HEMOGLOBINE, RETICULOCYTE, Globule_rouge, Globules_blancs, Plaquettes, DESCRIPTION,DATE,ID_PERSHE ) VALUES(?,?,?,?,?,?,?,?, (SELECT ID FROM PERSONNE WHERE NOM ='" + txt_nom.getText() + "'AND PRENOM ='" + txt_prenom.getText() + "' AND AGE = '" + txt_age.getText() + "'))";
        String url = "jdbc:sqlite:LABO.db";
        try {
            // create a connection to the database
            conn = DriverManager.getConnection(url);
        } catch (SQLException ex) {

        }

        try {
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, txt_hematologie.getText());
            pstmt.setString(2, txt_hemoglobine.getText());
            pstmt.setString(3, txt_reticulocyte.getText());
            pstmt.setString(4, txt_globule_rouge.getText());
            pstmt.setString(5, txt_globule_blanc.getText());
            pstmt.setString(6, txt_palquette.getText());
            pstmt.setString(7, jTXT_DESCRIPTION.getText());
            pstmt.setString(8, txt_date.getText());
            pstmt.executeUpdate();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
        JOptionPane.showMessageDialog(null, "ENREGISTRER");
    }//GEN-LAST:event_ENREGISTRER_HEMATOActionPerformed

    private void ENREGISTRER_CHIMIEUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ENREGISTRER_CHIMIEUActionPerformed
        Connection conn = null;
        String sql = "INSERT INTO CHIMIE_URINAIRE ( SUCRE, ALBUMINE, ACETONE, SANGCH, BILIRUNE, PH, DESCRIPTION,DATE, ID_PERSCH ) VALUES(?,?,?,?,?,?,?, ?,(SELECT ID FROM PERSONNE WHERE NOM ='" + txt_nom.getText() + "'AND PRENOM ='" + txt_prenom.getText() + "' AND AGE = '" + txt_age.getText() + "'))";
        String url = "jdbc:sqlite:LABO.db";
        try {
            // create a connection to the database
            conn = DriverManager.getConnection(url);
        } catch (SQLException ex) {

        }

        try {
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, txt_sucre.getText());
            pstmt.setString(2, txt_albumine.getText());
            pstmt.setString(3, txt_acetone.getText());
            pstmt.setString(4, txt_sangchime.getText());
            pstmt.setString(5, txt_bilirubine.getText());
            pstmt.setString(6, txt_ph.getText());
            pstmt.setString(7, jTXT_DESCRIPTION.getText());
            pstmt.setString(8, txt_date.getText());

            pstmt.executeUpdate();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
        JOptionPane.showMessageDialog(null, "ENREGISTRER");
    }//GEN-LAST:event_ENREGISTRER_CHIMIEUActionPerformed

    private void ENREGISTRER_BIOCHIMIEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ENREGISTRER_BIOCHIMIEActionPerformed
        Connection conn = null;
        String sql = "INSERT INTO BIOCHIMIE( UREE, CREATININE, GLYCIMIE, CALCIMIE, LIPIDES_TOTAUX , CHOLESTEROL, TRIGLYCERIEDES , PROTEINES, ACIDES_URIQUES, AMYLASES , SGOT45UW, SGPT35UW, DIRECTE0 , LIBRE , TOTAL , PHOSPHATASES_ALCALINES, PHOSPHOREMIE, SODIUM, POTASSIUM,DESCRIPTION, DATE,ID_PERSBIO ) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?, (SELECT ID FROM PERSONNE WHERE NOM ='" + txt_nom.getText() + "'AND PRENOM ='" + txt_prenom.getText() + "' AND AGE = '" + txt_age.getText() + "'))";
        String url = "jdbc:sqlite:LABO.db";
        try {
            // create a connection to the database
            conn = DriverManager.getConnection(url);
        } catch (SQLException ex) {

        }

        try {
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, txt_uree.getText());
            pstmt.setString(2, txt_creatine.getText());
            pstmt.setString(3, txt_glycemie.getText());
            pstmt.setString(4, txt_calcymie.getText());
            pstmt.setString(5, txt_lipide.getText());
            pstmt.setString(6, txt_cholesterol.getText());
            pstmt.setString(7, txt_triglyceride.getText());
            pstmt.setString(8, txt_protine.getText());
            pstmt.setString(9, txt_acide.getText());
            pstmt.setString(10, txt_amylase.getText());
            pstmt.setString(11, txt_sgot.getText());
            pstmt.setString(12, txt_sgpt.getText());
            pstmt.setString(13, txt_directe.getText());
            pstmt.setString(14, txt_libre.getText());
            pstmt.setString(15, txt_totale.getText());
            pstmt.setString(16, txt_phosph.getText());
            pstmt.setString(17, txt_phosphor.getText());
            pstmt.setString(18, txt_sodium.getText());
            pstmt.setString(19, txt_potasium.getText());
            pstmt.setString(20, jTXT_DESCRIPTION.getText());
            pstmt.setString(21, txt_date.getText());
            pstmt.executeUpdate();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
        JOptionPane.showMessageDialog(null, "ENREGISTRER");
    }//GEN-LAST:event_ENREGISTRER_BIOCHIMIEActionPerformed

    private void ENREGISTRER_COOMBSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ENREGISTRER_COOMBSActionPerformed
        Connection conn = null;
        String sql = "INSERT INTO COOMBS (HEURE1 , HEURE2 ,DESCRIPTION, DATE , ID_PERSCOO ) VALUES(?,?,?,?, (SELECT ID FROM PERSONNE WHERE NOM ='" + txt_nom.getText() + "'AND PRENOM ='" + txt_prenom.getText() + "' AND AGE = '" + txt_age.getText() + "'))";
        String url = "jdbc:sqlite:LABO.db";
        try {
            // create a connection to the database
            conn = DriverManager.getConnection(url);
        } catch (SQLException ex) {

        }

        try {
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, txt_1heure.getText());
            pstmt.setString(2, txt_2heure.getText());
            pstmt.setString(3, jTXT_DESCRIPTION.getText());
            pstmt.setString(4, txt_date.getText());

            pstmt.executeUpdate();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
        JOptionPane.showMessageDialog(null, "ENREGISTRER");
    }//GEN-LAST:event_ENREGISTRER_COOMBSActionPerformed

    private void ENREGISTRER_BACTERIOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ENREGISTRER_BACTERIOActionPerformed
        Connection conn = null;
        String sql = "INSERT INTO BACTERIOLOGIE (  URINES, SELLES_BA, DESCRIPTION,DATE, ID_PERSBA ) VALUES(?,?,?,?, (SELECT ID FROM PERSONNE WHERE NOM ='" + txt_nom.getText() + "'AND PRENOM ='" + txt_prenom.getText() + "' AND AGE = '" + txt_age.getText() + "'))";
        String url = "jdbc:sqlite:LABO.db";
        try {
            // create a connection to the database
            conn = DriverManager.getConnection(url);
        } catch (SQLException ex) {

        }

        try {
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, txt_urine.getText());
            pstmt.setString(2, txt_sellbact.getText());
            pstmt.setString(3, jTXT_DESCRIPTION.getText());

            pstmt.setString(4, txt_date.getText());

            pstmt.executeUpdate();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
        JOptionPane.showMessageDialog(null, "ENREGISTRER");
    }//GEN-LAST:event_ENREGISTRER_BACTERIOActionPerformed

    private void ENREGISTRER_PARASIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ENREGISTRER_PARASIActionPerformed
        Connection conn = null;
        String sql = "INSERT INTO PARASITOLOGIE (  SELLES_PA, SANG_PA, TEIGNE, DESCRIPTION, DATE,ID_PERSPA ) VALUES(?,?,?,?,?, (SELECT ID FROM PERSONNE WHERE NOM ='" + txt_nom.getText() + "'AND PRENOM ='" + txt_prenom.getText() + "' AND AGE = '" + txt_age.getText() + "'))";
        String url = "jdbc:sqlite:LABO.db";
        try {
            // create a connection to the database
            conn = DriverManager.getConnection(url);
        } catch (SQLException ex) {

        }

        try {
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, txt_selle.getText());
            pstmt.setString(2, txt_sang.getText());
            pstmt.setString(3, txt_teigne.getText());
            pstmt.setString(4, jTXT_DESCRIPTION.getText());
            pstmt.setString(5, txt_date.getText());

            pstmt.executeUpdate();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
        JOptionPane.showMessageDialog(null, "ENREGISTRER");
    }//GEN-LAST:event_ENREGISTRER_PARASIActionPerformed

    private void ENREGISTRER_SERIOLOGIEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ENREGISTRER_SERIOLOGIEActionPerformed
        Connection conn = null;
        String sql = "INSERT INTO SEROLOGIE ( ASLO, WALER_ROSE, LATEX, CRP, HBS, KLINE_VDRL, WIDAL, KALA_AZAR, TEST_DE_GROSSESSE, DESCRIPTION,DATE, ID_SER ) VALUES(?,?,?,?,?,?,?,?,?,?,?,(SELECT ID FROM PERSONNE WHERE NOM ='" + txt_nom.getText() + "'AND PRENOM ='" + txt_prenom.getText() + "' AND AGE = '" + txt_age.getText() + "'))";
        String url = "jdbc:sqlite:LABO.db";
        try {
            // create a connection to the database
            conn = DriverManager.getConnection(url);
        } catch (SQLException ex) {

        }

        try {
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, txt_also.getText());
            pstmt.setString(2, txt_waler.getText());
            pstmt.setString(3, txt_latex.getText());
            pstmt.setString(4, txt_crp.getText());
            pstmt.setString(5, txt_hbs.getText());
            pstmt.setString(6, txt_kline.getText());
            pstmt.setString(7, txt_widal.getText());
            pstmt.setString(8, txt_kala.getText());
            pstmt.setString(9, txt_testgr.getText());
            pstmt.setString(10, jTXT_DESCRIPTION.getText());
            pstmt.setString(11, txt_date.getText());
            pstmt.executeUpdate();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
        JOptionPane.showMessageDialog(null, "ENREGISTRER");
    }//GEN-LAST:event_ENREGISTRER_SERIOLOGIEActionPerformed

    private void ENREGISTRER_FORMULEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ENREGISTRER_FORMULEActionPerformed
        Connection conn = null;
        String sql = "INSERT INTO FORMULE_LEUCOCYTERE (  NEUTRON, EOSINO, BASO, LYMPHO, MONO, TEMPS_DE_SIGNEMENT, TEMPS_DE_COAGULATION, TEMPS_DE_QUICK, TAUX_DE_PROTHROMBINE, FIBRINOGENE, GROUPE_SANGUIN,DESCRIPTION, DATE, ID_PERSFO ) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?, (SELECT ID FROM PERSONNE WHERE NOM ='" + txt_nom.getText() + "'AND PRENOM ='" + txt_prenom.getText() + "' AND AGE = '" + txt_age.getText() + "'))";
        String url = "jdbc:sqlite:LABO.db";
        try {
            // create a connection to the database
            conn = DriverManager.getConnection(url);
        } catch (SQLException ex) {

        }

        try {
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, txt_neutron.getText());
            pstmt.setString(2, txt_eosino.getText());
            pstmt.setString(3, txt_baso.getText());
            pstmt.setString(4, txt_lympho.getText());
            pstmt.setString(5, txt_mono.getText());
            pstmt.setString(6, txt_temp_saing.getText());
            pstmt.setString(7, txt_temp_coac.getText());
            pstmt.setString(8, txt_temp_quiq.getText());
            pstmt.setString(9, txt_temp_proth.getText());
            pstmt.setString(10, txt_fibrino.getText());
            pstmt.setString(11, txt_groupe_sang.getText());
            pstmt.setString(12, jTXT_DESCRIPTION.getText());
            pstmt.setString(13, txt_date.getText());

            pstmt.executeUpdate();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
        JOptionPane.showMessageDialog(null, "ENREGISTRER");

    }//GEN-LAST:event_ENREGISTRER_FORMULEActionPerformed

    private void Menu_parasitologieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Menu_parasitologieActionPerformed
        HEMATOLOGIE.setVisible(false);
        BIOCHIMIE.setVisible(false);
        BACTERIOLOGIE.setVisible(false);
        AUTRES.setVisible(true);
        COOMBS.setVisible(false);
        CHIMIE_URINAIRE.setVisible(false);
        FORMULE_LEUCOCYTERE.setVisible(false);
        SERIOLOGIE.setVisible(false);
        PARASITOLOGIE.setVisible(true);
        txt_selle.requestFocus();
    }//GEN-LAST:event_Menu_parasitologieActionPerformed

    private void Menu_hematologieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu_hematologieMouseClicked

    }//GEN-LAST:event_Menu_hematologieMouseClicked

    private void Menu_formuleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu_formuleMouseClicked

    }//GEN-LAST:event_Menu_formuleMouseClicked

    private void Menu_coombsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu_coombsMouseClicked

    }//GEN-LAST:event_Menu_coombsMouseClicked

    private void Menu_biochimieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu_biochimieMouseClicked

    }//GEN-LAST:event_Menu_biochimieMouseClicked

    private void Menu_chimie_urinaireMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu_chimie_urinaireMouseClicked

    }//GEN-LAST:event_Menu_chimie_urinaireMouseClicked

    private void Menu_parasitologieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu_parasitologieMouseClicked

    }//GEN-LAST:event_Menu_parasitologieMouseClicked

    private void Menu_bacteriologieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu_bacteriologieMouseClicked

    }//GEN-LAST:event_Menu_bacteriologieMouseClicked

    private void Menu_seriologieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu_seriologieMouseClicked

    }//GEN-LAST:event_Menu_seriologieMouseClicked

    private void Menu_hematologieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Menu_hematologieActionPerformed
        HEMATOLOGIE.setVisible(true);
        BIOCHIMIE.setVisible(false);
        BACTERIOLOGIE.setVisible(false);
        AUTRES.setVisible(true);
        COOMBS.setVisible(false);
        CHIMIE_URINAIRE.setVisible(false);
        FORMULE_LEUCOCYTERE.setVisible(false);
        SERIOLOGIE.setVisible(false);
        PARASITOLOGIE.setVisible(false);
        txt_hematologie.requestFocus();
    }//GEN-LAST:event_Menu_hematologieActionPerformed

    private void Menu_seriologieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Menu_seriologieActionPerformed
        HEMATOLOGIE.setVisible(false);
        BIOCHIMIE.setVisible(false);
        BACTERIOLOGIE.setVisible(false);
        AUTRES.setVisible(true);
        COOMBS.setVisible(false);
        CHIMIE_URINAIRE.setVisible(false);
        FORMULE_LEUCOCYTERE.setVisible(false);
        SERIOLOGIE.setVisible(true);
        PARASITOLOGIE.setVisible(false);
        txt_also.requestFocus();
    }//GEN-LAST:event_Menu_seriologieActionPerformed

    private void Menu_bacteriologieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Menu_bacteriologieActionPerformed
        HEMATOLOGIE.setVisible(false);
        BIOCHIMIE.setVisible(false);
        BACTERIOLOGIE.setVisible(true);
        AUTRES.setVisible(true);
        COOMBS.setVisible(false);
        CHIMIE_URINAIRE.setVisible(false);
        FORMULE_LEUCOCYTERE.setVisible(false);
        SERIOLOGIE.setVisible(false);
        PARASITOLOGIE.setVisible(false);
        txt_urine.requestFocus();
    }//GEN-LAST:event_Menu_bacteriologieActionPerformed

    private void Menu_chimie_urinaireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Menu_chimie_urinaireActionPerformed
        HEMATOLOGIE.setVisible(false);
        BIOCHIMIE.setVisible(false);
        BACTERIOLOGIE.setVisible(false);
        AUTRES.setVisible(true);
        COOMBS.setVisible(false);
        CHIMIE_URINAIRE.setVisible(true);
        FORMULE_LEUCOCYTERE.setVisible(false);
        SERIOLOGIE.setVisible(false);
        PARASITOLOGIE.setVisible(false);
        txt_sucre.requestFocus();
    }//GEN-LAST:event_Menu_chimie_urinaireActionPerformed

    private void Menu_biochimieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Menu_biochimieActionPerformed
        HEMATOLOGIE.setVisible(false);
        BIOCHIMIE.setVisible(true);
        BACTERIOLOGIE.setVisible(false);
        AUTRES.setVisible(true);
        COOMBS.setVisible(false);
        CHIMIE_URINAIRE.setVisible(false);
        FORMULE_LEUCOCYTERE.setVisible(false);
        SERIOLOGIE.setVisible(false);
        PARASITOLOGIE.setVisible(false);
        txt_uree.requestFocus();
    }//GEN-LAST:event_Menu_biochimieActionPerformed

    private void Menu_coombsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Menu_coombsActionPerformed
        HEMATOLOGIE.setVisible(false);
        BIOCHIMIE.setVisible(false);
        BACTERIOLOGIE.setVisible(false);
        AUTRES.setVisible(true);
        COOMBS.setVisible(true);
        CHIMIE_URINAIRE.setVisible(false);
        FORMULE_LEUCOCYTERE.setVisible(false);
        SERIOLOGIE.setVisible(false);
        PARASITOLOGIE.setVisible(false);
        txt_1heure.requestFocus();
    }//GEN-LAST:event_Menu_coombsActionPerformed

    private void Menu_formuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Menu_formuleActionPerformed
        HEMATOLOGIE.setVisible(false);
        BIOCHIMIE.setVisible(false);
        BACTERIOLOGIE.setVisible(false);
        AUTRES.setVisible(true);
        COOMBS.setVisible(false);
        CHIMIE_URINAIRE.setVisible(false);
        FORMULE_LEUCOCYTERE.setVisible(true);
        SERIOLOGIE.setVisible(false);
        PARASITOLOGIE.setVisible(false);
        txt_neutron.requestFocus();
    }//GEN-LAST:event_Menu_formuleActionPerformed

    private void txt_nomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nomKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_prenom.requestFocus();
        }
    }//GEN-LAST:event_txt_nomKeyPressed

    private void txt_nomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nomActionPerformed

    private void txt_ageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ageKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_telephone.requestFocus();
        }
    }//GEN-LAST:event_txt_ageKeyPressed

    private void Menu_ajouter_patientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Menu_ajouter_patientActionPerformed
        ENREGISTRER_PERS.setVisible(false);
        txt_nom.setText("");
        txt_prenom.setText("");
        txt_age.setText("");
        txt_telephone.setText("");
        txt_uree.setText("");
        txt_creatine.setText("");
        txt_cholesterol.setText("");
        txt_triglyceride.setText("");
        txt_glycemie.setText("");
        txt_calcymie.setText("");
        txt_lipide.setText("");
        txt_protine.setText("");
        txt_acide.setText("");
        txt_amylase.setText("");
        txt_sgot.setText("");
        txt_sgpt.setText("");
        txt_directe.setText("");
        txt_libre.setText("");
        txt_totale.setText("");
        txt_phosph.setText("");
        txt_phosphor.setText("");
        txt_sodium.setText("");
        txt_potasium.setText("");
        txt_hematologie.setText("");
        txt_hemoglobine.setText("");
        txt_reticulocyte.setText("");
        txt_globule_rouge.setText("");
        txt_globule_blanc.setText("");
        txt_palquette.setText("");
        txt_neutron.setText("");
        txt_eosino.setText("");
        txt_baso.setText("");
        txt_lympho.setText("");
        txt_mono.setText("");
        txt_temp_saing.setText("");
        txt_temp_coac.setText("");
        txt_temp_quiq.setText("");
        txt_temp_proth.setText("");
        txt_fibrino.setText("");
        txt_groupe_sang.setText("");
        txt_1heure.setText("");
        txt_2heure.setText("");
        txt_sucre.setText("");
        txt_albumine.setText("");
        txt_acetone.setText("");
        txt_sangchime.setText("");
        txt_bilirubine.setText("");
        txt_ph.setText("");
        txt_selle.setText("");
        txt_sang.setText("");
        txt_teigne.setText("");
        txt_also.setText("");
        txt_waler.setText("");
        txt_latex.setText("");
        txt_crp.setText("");
        txt_hbs.setText("");
        txt_kline.setText("");
        txt_widal.setText("");
        txt_kala.setText("");
        txt_testgr.setText("");
        txt_urine.setText("");
        txt_sellbact.setText("");
        jTXT_DESCRIPTION.setText("");
        txt_nom.requestFocus();
    }//GEN-LAST:event_Menu_ajouter_patientActionPerformed

    private void txt_sangKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_sangKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_teigne.requestFocus();
        }
    }//GEN-LAST:event_txt_sangKeyPressed

    private void Menu_liste_patientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Menu_liste_patientActionPerformed
        Liste_des_patiens l = new Liste_des_patiens();
        l.setVisible(true);
    }//GEN-LAST:event_Menu_liste_patientActionPerformed

    private void jMenuItem_BIOCHIMIEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_BIOCHIMIEActionPerformed

        ETAT_BIOCHIMIE e = new ETAT_BIOCHIMIE();
      e.txt_nom.setText(txt_nom.getText());
        e.txt_prenom.setText(txt_prenom.getText());
        e.txt_age.setText(txt_age.getText());
        Connection conn = null;
       
                String sql1 = "SELECT UREE, CREATININE, CHOLESTEROL, TRIGLYCERIEDES , GLYCIMIE, CALCIMIE, LIPIDES_TOTAUX ,  PROTEINES, ACIDES_URIQUES, AMYLASES,SGOT45UW, SGPT35UW, DIRECTE0 , LIBRE , TOTAL , PHOSPHATASES_ALCALINES, PHOSPHOREMIE, SODIUM, POTASSIUM , DESCRIPTION FROM  BIOCHIMIE WHERE ID_PERSBIO=(SELECT ID FROM PERSONNE WHERE NOM = '"+txt_nom.getText()+"' AND PRENOM ='"+txt_prenom.getText()+"' AND AGE = '"+txt_age.getText()+"') AND DATE = '" + txt_date.getText() + "'";

                try {
                    String url = "jdbc:sqlite:LABO.db";
                    // create a connection to the database
                    conn = DriverManager.getConnection(url);

                   
                    PreparedStatement stmt = conn.prepareStatement(sql1);
                    //Bind values into the parameters.
                    ResultSet rs = stmt.executeQuery();
                    e.txt_uree.setText(rs.getString(1));
                    e.txt_creatine.setText(rs.getString(2));
                    e.txt_cholesterol.setText(rs.getString(3));
                    e.txt_triglyceride.setText(rs.getString(4));
                    e.txt_glycemie.setText(rs.getString(5));
                    e.txt_calcymie.setText(rs.getString(6));
                    e.txt_lipide.setText(rs.getString(7));
                    e.txt_protine.setText(rs.getString(8));
                    e.txt_acide.setText(rs.getString(9));
                    e.txt_amylase.setText(rs.getString(10));
                    e.txt_sgot.setText(rs.getString(11));
                    e.txt_sgpt.setText(rs.getString(12));
                    e.txt_directe.setText(rs.getString(13));
                    e.txt_libre.setText(rs.getString(14));
                    e.txt_totale.setText(rs.getString(15));
                    e.txt_phosph.setText(rs.getString(16));
                    e.txt_phosphor.setText(rs.getString(17));
                    e.txt_sodium.setText(rs.getString(18));
                    e.txt_potasium.setText(rs.getString(19));
                    e.jTXT_DESCRIPTION.setText(rs.getString(20));

                } catch (SQLException ex) {
                   
                } finally {
                    try {
                        if (conn != null) {
                            conn.close();
                        }
                    } catch (SQLException ex) {
                        System.out.println(ex.getMessage());
                    }
                }

        e.setVisible(true);
    }//GEN-LAST:event_jMenuItem_BIOCHIMIEActionPerformed

    private void jMenuItem_SERIOLOGIEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_SERIOLOGIEActionPerformed

        ETAT_SERIOLOGIE e = new ETAT_SERIOLOGIE();
       e.txt_nom.setText(txt_nom.getText());
        e.txt_prenom.setText(txt_prenom.getText());
        e.txt_age.setText(txt_age.getText());
 Connection conn = null;

        String sql1 = "SELECT ASLO, WALER_ROSE, LATEX, CRP, HBS, KLINE_VDRL, WIDAL, KALA_AZAR, TEST_DE_GROSSESSE,DESCRIPTION FROM  SEROLOGIE WHERE ID_SER=(SELECT ID FROM PERSONNE WHERE NOM ='" + txt_nom.getText() + "'AND PRENOM ='" + txt_prenom.getText() + "' AND AGE = '" + txt_age.getText() + "')  AND DATE = '" + txt_date.getText() + "'";

        try {
            String url = "jdbc:sqlite:LABO.db";
            // create a connection to the database
            conn = DriverManager.getConnection(url);

            PreparedStatement stmt = conn.prepareStatement(sql1);
            //Bind values into the parameters.
            ResultSet rs = stmt.executeQuery();

            e.txt_also.setText(rs.getString(1));
            e.txt_waler.setText(rs.getString(2));
            e.txt_latex.setText(rs.getString(3));
            e.txt_crp.setText(rs.getString(4));
            e.txt_hbs.setText(rs.getString(5));
            e.txt_kline.setText(rs.getString(6));
            e.txt_widal.setText(rs.getString(7));
            e.txt_kala.setText(rs.getString(8));
            e.txt_testgr.setText(rs.getString(9));
            e.jTXT_DESCRIPTION.setText(rs.getString(10));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (Exception ex) {
                System.out.println(ex.getMessage());
            }
        }


    
        e.setVisible(true);
    }//GEN-LAST:event_jMenuItem_SERIOLOGIEActionPerformed

    private void jMenuItem_COOMBSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_COOMBSActionPerformed

        ETAT_COOMBS e = new ETAT_COOMBS();
        e.txt_nom_coomb.setText(txt_nom.getText());
        e.txt_prenom_coomb.setText(txt_prenom.getText());
        e.txt_age_coombs.setText(txt_age.getText());
       Connection conn1 = null;
//String sql= "SELECT ID FROM PERSONNE WHERE ((NOM ='" + txt_nom_coomb.getText() + "')AND (PRENOM ='" + txt_prenom_coomb.getText() + "') AND (AGE = '" + txt_age_coombs.getText() + "'))";
       String sql11 ="SELECT  HEURE1, HEURE2,DESCRIPTION FROM  COOMBS WHERE ID_PERSCOO=(SELECT ID FROM PERSONNE WHERE NOM = '"+txt_nom.getText()+"' AND PRENOM ='"+txt_prenom.getText()+"' AND AGE = '"+txt_age.getText()+"') AND DATE = '" + txt_date.getText() + "'";

        try {
            String url = "jdbc:sqlite:LABO.db";
            // create a connection to the database
            conn1 = DriverManager.getConnection(url);

            PreparedStatement stmt1 = conn1.prepareStatement(sql11);
      
                   
            //Bind values into the parameters.
            ResultSet rs1 = stmt1.executeQuery();
      //n.jTable1.setModel(DbUtils.resultSetToTableModel(rs1));
//while(rs1.next()){
            e.txt_1heure.setText(rs1.getString(1));
            e.txt_2heure.setText(rs1.getString(2));
          
          e.jTXT_DESCRIPTION.setText(rs1.getString(3));}
         
         catch (Exception ex) {
            System.out.println(ex.getMessage());
        } finally {
            try {
                if (conn1 != null) {
                    conn1.close();
                }
            } catch (Exception ex) {
                System.out.println(ex.getMessage());
            }
        }
       

       e.setVisible(true);
    }//GEN-LAST:event_jMenuItem_COOMBSActionPerformed

    private void jMenuItem_PARASITOLOGIEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_PARASITOLOGIEActionPerformed

        ETAT_PARASITOLOGIE e = new ETAT_PARASITOLOGIE();
         e.txt_nom.setText(txt_nom.getText());
        e.txt_prenom.setText(txt_prenom.getText());
        e.txt_age.setText(txt_age.getText());
        Connection conn = null;

        String sql1 = "SELECT SELLES_PA, SANG_PA, TEIGNE,DESCRIPTION FROM  PARASITOLOGIE WHERE ID_PERSPA=(SELECT ID FROM PERSONNE WHERE NOM ='" + txt_nom.getText() + "'AND PRENOM ='" + txt_prenom.getText() + "' AND AGE = '" + txt_age.getText() + "') AND DATE = '" + txt_date.getText() + "')";

        try {
            String url = "jdbc:sqlite:LABO.db";
            // create a connection to the database
            conn = DriverManager.getConnection(url);

            PreparedStatement stmt = conn.prepareStatement(sql1);
            //Bind values into the parameters.
            ResultSet rs = stmt.executeQuery();

            e.txt_selle.setText(rs.getString(1));
            e.txt_sang.setText(rs.getString(2));
            e.txt_teigne.setText(rs.getString(3));
            e.jTXT_DESCRIPTION.setText(rs.getString(4));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (Exception ex) {
                System.out.println(ex.getMessage());
            }
        }


        e.setVisible(true);
    }//GEN-LAST:event_jMenuItem_PARASITOLOGIEActionPerformed

    private void jMenuItem_CHIMIE_URINAREActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_CHIMIE_URINAREActionPerformed

        ETAT_CHIMIE_URINAIRE e = new ETAT_CHIMIE_URINAIRE();
        e.txt_nom.setText(txt_nom.getText());
        e.txt_prenom.setText(txt_prenom.getText());
        e.txt_age.setText(txt_age.getText()); 
        Connection conn = null;

        String sql1 = "SELECT SUCRE, ALBUMINE, ACETONE, SANGCH, BILIRUNE, PH,DESCRIPTION FROM  CHIMIE_URINAIRE WHERE ID_PERSCH=(SELECT ID FROM PERSONNE WHERE NOM ='" + txt_nom.getText() + "'AND PRENOM ='" + txt_prenom.getText() + "' AND AGE = '" + txt_age.getText() + "') AND DATE = '" + txt_date.getText() + "'";

        try {
            String url = "jdbc:sqlite:LABO.db";
            // create a connection to the database
            conn = DriverManager.getConnection(url);

            PreparedStatement stmt = conn.prepareStatement(sql1);
            //Bind values into the parameters.
            ResultSet rs = stmt.executeQuery();

            e.txt_sucre.setText(rs.getString(1));
            e.txt_albumine.setText(rs.getString(2));
            e.txt_acetone.setText(rs.getString(3));
            e.txt_sangchime.setText(rs.getString(4));
            e.txt_bilirubine.setText(rs.getString(5));
           e.txt_ph.setText(rs.getString(6));
            e.jTXT_DESCRIPTION.setText(rs.getString(7));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (Exception ex) {
                System.out.println(ex.getMessage());
            }
        }

        e.setVisible(true);
    }//GEN-LAST:event_jMenuItem_CHIMIE_URINAREActionPerformed

    private void jMenuItem_FORMULE_LEUCOCYTEREActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_FORMULE_LEUCOCYTEREActionPerformed

        ETAT_FORMULE_LEUCOCYTERE e = new ETAT_FORMULE_LEUCOCYTERE();
         e.txt_nom.setText(txt_nom.getText());
        e.txt_prenom.setText(txt_prenom.getText());
        e.txt_age.setText(txt_age.getText());
        Connection conn = null;
       
                String sql1 = "SELECT NEUTRON, EOSINO, BASO, LYMPHO, MONO, TEMPS_DE_SIGNEMENT, TEMPS_DE_COAGULATION, TEMPS_DE_QUICK, TAUX_DE_PROTHROMBINE, FIBRINOGENE, GROUPE_SANGUIN, DESCRIPTION  FROM  FORMULE_LEUCOCYTERE WHERE  ID_PERSFO=(SELECT ID FROM PERSONNE WHERE NOM ='" + txt_nom.getText() + "'AND PRENOM ='" + txt_prenom.getText() + "' AND AGE = '" + txt_age.getText() + "') AND DATE = '" + txt_date.getText() + "'";

                try {
                    String url = "jdbc:sqlite:LABO.db";
                    // create a connection to the database
                    conn = DriverManager.getConnection(url);

                   
                    PreparedStatement stmt = conn.prepareStatement(sql1);
                    //Bind values into the parameters.
                    ResultSet rs = stmt.executeQuery();
                    e.txt_neutron.setText(rs.getString(1));
                    e.txt_eosino.setText(rs.getString(2));
                    e.txt_baso.setText(rs.getString(3));
                    e.txt_lympho.setText(rs.getString(4));
                    e.txt_mono.setText(rs.getString(5));
                    e.txt_temp_saing.setText(rs.getString(6));
                    e.txt_temp_coac.setText(rs.getString(7));
                    e.txt_temp_quiq.setText(rs.getString(8));
                    e.txt_temp_proth.setText(rs.getString(9));
                    e.txt_fibrino.setText(rs.getString(10));
                    e.txt_groupe_sang.setText(rs.getString(11));
                    e.jTXT_DESCRIPTION.setText(rs.getString(12));
                   

                } catch (SQLException ex) {
                    System.out.println(ex.getMessage());
                } finally {
                    try {
                        if (conn != null) {
                            conn.close();
                        }
                    } catch (SQLException ex) {
                        System.out.println(ex.getMessage());
                    }
                }
                
        e.setVisible(true);

    }//GEN-LAST:event_jMenuItem_FORMULE_LEUCOCYTEREActionPerformed

    private void jMenuItem_PACTERIOLOGIEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_PACTERIOLOGIEActionPerformed
        ETAT_BACTERIOLOGIE e = new ETAT_BACTERIOLOGIE();
        e.txt_nom.setText(txt_nom.getText());
        e.txt_prenom.setText(txt_prenom.getText());
        e.txt_age.setText(txt_age.getText());
         Connection conn = null;
String sql1 = "SELECT URINES, SELLES_BA,DESCRIPTION FROM  BACTERIOLOGIE WHERE ID_PERSBA=(SELECT ID FROM PERSONNE WHERE NOM ='" + txt_nom.getText() + "'AND PRENOM ='" + txt_prenom.getText() + "' AND AGE = '" + txt_age.getText() + "') AND DATE = '" + txt_date.getText() + "'";

        try {
            String url = "jdbc:sqlite:LABO.db";
            // create a connection to the database
            conn = DriverManager.getConnection(url);

            PreparedStatement stmt = conn.prepareStatement(sql1);
            //Bind values into the parameters.
            ResultSet rs = stmt.executeQuery();

            e.txt_urine.setText(rs.getString(1));
            e.txt_sellbact.setText(rs.getString(2));
            e.jTXT_DESCRIPTION.setText(rs.getString(3));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (Exception ex) {
                System.out.println(ex.getMessage());
            }
        }


        e.setVisible(true);

    }//GEN-LAST:event_jMenuItem_PACTERIOLOGIEActionPerformed

    private void jMenuItem_HEMATOLOGIEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_HEMATOLOGIEActionPerformed

        ETAT_HEMATOLOGIE e = new ETAT_HEMATOLOGIE();
         e.txt_nom.setText(txt_nom.getText());
        e.txt_prenom.setText(txt_prenom.getText());
        e.txt_age.setText(txt_age.getText());
         Connection conn = null;

        String sql1 = "SELECT HEMATOCRITE, HEMOGLOBINE, RETICULOCYTE, Globule_rouge, Globules_blancs, Plaquettes,DESCRIPTION FROM  HEMATOLOGIE WHERE ID_PERSHE=(SELECT ID FROM PERSONNE WHERE NOM ='" + txt_nom.getText() + "'AND PRENOM ='" + txt_prenom.getText() + "' AND AGE = '" + txt_age.getText() + "') AND DATE = '" + txt_date.getText() + "'";

        try {
            String url = "jdbc:sqlite:LABO.db";
            // create a connection to the database
            conn = DriverManager.getConnection(url);

            PreparedStatement stmt = conn.prepareStatement(sql1);
            //Bind values into the parameters.
            ResultSet rs = stmt.executeQuery();

            e.txt_hematologie.setText(rs.getString(1));
            e.txt_hemoglobine.setText(rs.getString(2));
            e.txt_reticulocyte.setText(rs.getString(3));
            e.txt_globule_rouge.setText(rs.getString(4));
            e.txt_globule_blanc.setText(rs.getString(5));
            e.txt_palquette.setText(rs.getString(6));
            e.jTXT_DESCRIPTION.setText(rs.getString(7));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (Exception ex) {
                System.out.println(ex.getMessage());
            }
        }


        e.setVisible(true);
    }//GEN-LAST:event_jMenuItem_HEMATOLOGIEActionPerformed

    private void txt_dateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_dateMouseClicked
       
    }//GEN-LAST:event_txt_dateMouseClicked

    private void ENREGISTRER_PERSMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ENREGISTRER_PERSMouseMoved
       Connection conn1 = null;
        String sql1="SELECT ID FROM PERSONNE WHERE ((NOM  = '"+txt_nom.getText()+"') AND (PRENOM = '"+txt_prenom.getText()+"') AND (AGE=  '"+txt_age.getText()+"'))";
   try {
            String url = "jdbc:sqlite:LABO.db";
            // create a connection to the database
            conn1 = DriverManager.getConnection(url);

            PreparedStatement pstmt1 = conn1.prepareStatement(sql1);
           ResultSet rs1=pstmt1.executeQuery();
  if (rs1.next()){
  JOptionPane.showMessageDialog(null, "CE NOM EXIST DEJA");    
  }
  else {
   ENREGISTRER_PERS.setEnabled(true);
      
     
  }       
        } catch (SQLException e) {
             
             
        } finally {
            try {
                if (conn1!= null) {
                    conn1.close();
                }
            } catch (SQLException ex) {
                
            }
        }     
        
    }//GEN-LAST:event_ENREGISTRER_PERSMouseMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                /* if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }*/
                UIManager.setLookAndFeel("com.jtattoo.plaf.smart.SmartLookAndFeel");
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principale().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AUTRES;
    private javax.swing.JPanel BACTERIOLOGIE;
    private javax.swing.JPanel BIOCHIMIE;
    private javax.swing.JPanel CHIMIE_URINAIRE;
    private javax.swing.JPanel COOMBS;
    public javax.swing.JComboBox<String> Combo_sexe;
    private javax.swing.JButton ENREGISTRER_BACTERIO;
    private javax.swing.JButton ENREGISTRER_BIOCHIMIE;
    private javax.swing.JButton ENREGISTRER_CHIMIEU;
    private javax.swing.JButton ENREGISTRER_COOMBS;
    private javax.swing.JButton ENREGISTRER_FORMULE;
    private javax.swing.JButton ENREGISTRER_HEMATO;
    private javax.swing.JButton ENREGISTRER_PARASI;
    public javax.swing.JButton ENREGISTRER_PERS;
    private javax.swing.JButton ENREGISTRER_SERIOLOGIE;
    private javax.swing.JPanel FORMULE_LEUCOCYTERE;
    private javax.swing.JPanel HEMATOLOGIE;
    private javax.swing.JMenuItem Menu_ajouter_patient;
    private javax.swing.JMenuItem Menu_bacteriologie;
    private javax.swing.JMenuItem Menu_biochimie;
    private javax.swing.JMenuItem Menu_chimie_urinaire;
    private javax.swing.JMenuItem Menu_coombs;
    private javax.swing.JMenuItem Menu_formule;
    private javax.swing.JMenuItem Menu_hematologie;
    private javax.swing.JMenuItem Menu_liste_patient;
    private javax.swing.JMenuItem Menu_parasitologie;
    private javax.swing.JMenuItem Menu_seriologie;
    private javax.swing.JPanel PARASITOLOGIE;
    private javax.swing.JPanel SERIOLOGIE;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem_BIOCHIMIE;
    private javax.swing.JMenuItem jMenuItem_CHIMIE_URINARE;
    private javax.swing.JMenuItem jMenuItem_COOMBS;
    private javax.swing.JMenuItem jMenuItem_FORMULE_LEUCOCYTERE;
    private javax.swing.JMenuItem jMenuItem_HEMATOLOGIE;
    private javax.swing.JMenuItem jMenuItem_PACTERIOLOGIE;
    private javax.swing.JMenuItem jMenuItem_PARASITOLOGIE;
    private javax.swing.JMenuItem jMenuItem_SERIOLOGIE;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextArea jTXT_DESCRIPTION;
    private javax.swing.JTextField txt_1heure;
    private javax.swing.JTextField txt_2heure;
    private javax.swing.JTextField txt_acetone;
    private javax.swing.JTextField txt_acide;
    public javax.swing.JTextField txt_age;
    private javax.swing.JTextField txt_albumine;
    private javax.swing.JTextField txt_also;
    private javax.swing.JTextField txt_amylase;
    private javax.swing.JTextField txt_baso;
    private javax.swing.JTextField txt_bilirubine;
    private javax.swing.JTextField txt_calcymie;
    private javax.swing.JTextField txt_cholesterol;
    private javax.swing.JTextField txt_creatine;
    private javax.swing.JTextField txt_crp;
    public javax.swing.JTextField txt_date;
    private javax.swing.JTextField txt_directe;
    private javax.swing.JTextField txt_eosino;
    private javax.swing.JTextField txt_fibrino;
    private javax.swing.JTextField txt_globule_blanc;
    private javax.swing.JTextField txt_globule_rouge;
    private javax.swing.JTextField txt_glycemie;
    private javax.swing.JTextField txt_groupe_sang;
    private javax.swing.JTextField txt_hbs;
    private javax.swing.JTextField txt_hematologie;
    private javax.swing.JTextField txt_hemoglobine;
    private javax.swing.JTextField txt_kala;
    private javax.swing.JTextField txt_kline;
    private javax.swing.JTextField txt_latex;
    private javax.swing.JTextField txt_libre;
    private javax.swing.JTextField txt_lipide;
    private javax.swing.JTextField txt_lympho;
    private javax.swing.JTextField txt_mono;
    private javax.swing.JTextField txt_neutron;
    public javax.swing.JTextField txt_nom;
    private javax.swing.JTextField txt_palquette;
    private javax.swing.JTextField txt_ph;
    private javax.swing.JTextField txt_phosph;
    private javax.swing.JTextField txt_phosphor;
    private javax.swing.JTextField txt_potasium;
    public javax.swing.JTextField txt_prenom;
    private javax.swing.JTextField txt_protine;
    private javax.swing.JTextField txt_reticulocyte;
    private javax.swing.JTextField txt_rhesus;
    private javax.swing.JTextField txt_sang;
    private javax.swing.JTextField txt_sangchime;
    private javax.swing.JTextField txt_sellbact;
    private javax.swing.JTextField txt_selle;
    private javax.swing.JTextField txt_sgot;
    private javax.swing.JTextField txt_sgpt;
    private javax.swing.JTextField txt_sodium;
    private javax.swing.JTextField txt_sucre;
    private javax.swing.JTextField txt_teigne;
    public javax.swing.JTextField txt_telephone;
    private javax.swing.JTextField txt_temp_coac;
    private javax.swing.JTextField txt_temp_proth;
    private javax.swing.JTextField txt_temp_quiq;
    private javax.swing.JTextField txt_temp_saing;
    private javax.swing.JTextField txt_testgr;
    private javax.swing.JTextField txt_totale;
    private javax.swing.JTextField txt_triglyceride;
    private javax.swing.JTextField txt_uree;
    private javax.swing.JTextField txt_urine;
    private javax.swing.JTextField txt_waler;
    private javax.swing.JTextField txt_widal;
    // End of variables declaration//GEN-END:variables
}
